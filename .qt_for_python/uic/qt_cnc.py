# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'qt_cnc.ui'
##
## Created by: Qt User Interface Compiler version 6.0.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *

from qtvcp.widgets.gcode_graphics import GCodeGraphics
from qtvcp.widgets.mdi_line import MDILine
from qtvcp.widgets.state_label import StateLabel
from qtvcp.widgets.led_widget import LED
from qtvcp.widgets.state_led import StateLED
from qtvcp.widgets.container_widgets import StateEnableGridLayout
from qtvcp.widgets.status_stacked import StatusStacked
from qtvcp.widgets.jog_increments import JogIncrements
from qtvcp.widgets.screen_options import ScreenOptions
from qtvcp.widgets.adjustment_bar import StatusAdjustmentBar
from qtvcp.widgets.status_label import StatusLabel
from qtvcp.widgets.dro_widget import DROLabel
from qtvcp.widgets.action_button_round import RoundButton
from qtvcp.widgets.widget_switcher import WidgetSwitcher
from qtvcp.widgets.gcode_editor import GcodeEditor
from qtvcp.widgets.action_button import ActionButton


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1027, 790)
        MainWindow.setMinimumSize(QSize(1027, 790))
        MainWindow.setMaximumSize(QSize(1027, 790))
        MainWindow.setStyleSheet(u"")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.drolabel_y = DROLabel(self.centralwidget)
        self.drolabel_y.setObjectName(u"drolabel_y")
        self.drolabel_y.setGeometry(QRect(450, 520, 131, 21))
        self.drolabel_y.setStyleSheet(u"color: rgb(0, 255, 255);\n"
"font: 75 18pt \"Courier 10 Pitch\";")
        self.drolabel_y.setProperty("Qjoint_number", 1)
        self.drolabel_y.setProperty("Qreference_type", 0)
        self.drolabel_z = DROLabel(self.centralwidget)
        self.drolabel_z.setObjectName(u"drolabel_z")
        self.drolabel_z.setGeometry(QRect(450, 550, 131, 21))
        self.drolabel_z.setStyleSheet(u"color: rgb(0, 255, 255);\n"
"font: 18pt \"Courier 10 Pitch\";")
        self.drolabel_z.setTextFormat(Qt.PlainText)
        self.drolabel_z.setScaledContents(True)
        self.drolabel_z.setProperty("Qjoint_number", 2)
        self.drolabel_z.setProperty("Qreference_type", 0)
        self.drolabel_x = DROLabel(self.centralwidget)
        self.drolabel_x.setObjectName(u"drolabel_x")
        self.drolabel_x.setGeometry(QRect(450, 490, 131, 21))
        self.drolabel_x.setStyleSheet(u"color: rgb(0, 255, 255);\n"
"font: 75 18pt \"Courier 10 Pitch\";")
        self.drolabel_x.setProperty("Qreference_type", 0)
        self.state_enable_gridLayout = StateEnableGridLayout(self.centralwidget)
        self.state_enable_gridLayout.setObjectName(u"state_enable_gridLayout")
        self.state_enable_gridLayout.setGeometry(QRect(610, 490, 61, 91))
        self.state_enable_gridLayout.setProperty("is_on_status", True)
        self.state_enable_gridLayout.setProperty("is_idle_status", True)
        self.state_enable_gridLayout.setProperty("is_homed_status", True)
        self.actionbutton = ActionButton(self.state_enable_gridLayout)
        self.actionbutton.setObjectName(u"actionbutton")
        self.actionbutton.setGeometry(QRect(0, 60, 61, 27))
        self.actionbutton.setProperty("estop_action", False)
        self.actionbutton.setProperty("zero_axis_action", True)
        self.actionbutton.setProperty("joint_number", 2)
        self.actionbutton_2 = ActionButton(self.state_enable_gridLayout)
        self.actionbutton_2.setObjectName(u"actionbutton_2")
        self.actionbutton_2.setGeometry(QRect(0, 30, 61, 27))
        self.actionbutton_2.setProperty("estop_action", False)
        self.actionbutton_2.setProperty("zero_axis_action", True)
        self.actionbutton_2.setProperty("joint_number", 1)
        self.actionbutton_3 = ActionButton(self.state_enable_gridLayout)
        self.actionbutton_3.setObjectName(u"actionbutton_3")
        self.actionbutton_3.setGeometry(QRect(0, 0, 61, 27))
        self.actionbutton_3.setProperty("estop_action", False)
        self.actionbutton_3.setProperty("zero_axis_action", True)
        self.actionbutton_3.setProperty("zero_g5x_action", False)
        self.actionbutton_3.setProperty("joint_number", 0)
        self.label_13 = QLabel(self.centralwidget)
        self.label_13.setObjectName(u"label_13")
        self.label_13.setGeometry(QRect(20, 650, 72, 22))
        self.label_14 = QLabel(self.centralwidget)
        self.label_14.setObjectName(u"label_14")
        self.label_14.setGeometry(QRect(150, 650, 61, 22))
        self.label_15 = QLabel(self.centralwidget)
        self.label_15.setObjectName(u"label_15")
        self.label_15.setGeometry(QRect(700, 500, 71, 22))
        self.label_16 = QLabel(self.centralwidget)
        self.label_16.setObjectName(u"label_16")
        self.label_16.setGeometry(QRect(700, 530, 72, 22))
        self.line = QFrame(self.centralwidget)
        self.line.setObjectName(u"line")
        self.line.setGeometry(QRect(360, 580, 301, 20))
        self.line.setFrameShape(QFrame.HLine)
        self.line.setFrameShadow(QFrame.Sunken)
        self.state_label = StatusLabel(self.centralwidget)
        self.state_label.setObjectName(u"state_label")
        self.state_label.setGeometry(QRect(130, 685, 101, 31))
        self.state_label.setTextFormat(Qt.RichText)
        self.state_label.setProperty("feed_override_status", False)
        self.state_label.setProperty("rapid_override_status", True)
        self.state_label_2 = StatusLabel(self.centralwidget)
        self.state_label_2.setObjectName(u"state_label_2")
        self.state_label_2.setGeometry(QRect(20, 685, 101, 31))
        self.state_label_2.setTextFormat(Qt.RichText)
        self.state_label_3 = StatusLabel(self.centralwidget)
        self.state_label_3.setObjectName(u"state_label_3")
        self.state_label_3.setGeometry(QRect(240, 685, 101, 31))
        self.state_label_3.setTextFormat(Qt.RichText)
        self.state_label_3.setProperty("feed_override_status", False)
        self.state_label_3.setProperty("spindle_override_status", True)
        self.state_label_4 = StatusLabel(self.centralwidget)
        self.state_label_4.setObjectName(u"state_label_4")
        self.state_label_4.setGeometry(QRect(760, 490, 71, 41))
        self.state_label_4.setTextFormat(Qt.RichText)
        self.state_label_4.setProperty("feed_override_status", False)
        self.state_label_4.setProperty("spindle_override_status", False)
        self.state_label_4.setProperty("tool_number_status", True)
        self.state_label_5 = StatusLabel(self.centralwidget)
        self.state_label_5.setObjectName(u"state_label_5")
        self.state_label_5.setGeometry(QRect(90, 640, 61, 41))
        self.state_label_5.setTextFormat(Qt.RichText)
        self.state_label_5.setProperty("feed_override_status", False)
        self.state_label_5.setProperty("spindle_override_status", False)
        self.state_label_5.setProperty("jograte_status", True)
        self.state_label_5.setProperty("tool_number_status", False)
        self.state_label_6 = StatusLabel(self.centralwidget)
        self.state_label_6.setObjectName(u"state_label_6")
        self.state_label_6.setGeometry(QRect(410, 610, 251, 61))
        self.state_label_6.setTextFormat(Qt.RichText)
        self.state_label_6.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.state_label_6.setProperty("feed_override_status", False)
        self.state_label_6.setProperty("spindle_override_status", False)
        self.state_label_6.setProperty("requested_spindle_speed_status", False)
        self.state_label_6.setProperty("actual_spindle_speed_status", True)
        self.led_home_x = StateLED(self.centralwidget)
        self.led_home_x.setObjectName(u"led_home_x")
        self.led_home_x.setGeometry(QRect(590, 490, 21, 21))
        self.led_home_x.setDiameter(10)
        self.led_home_x.setColor(QColor(255, 255, 0, 214))
        self.led_home_x.setProperty("flashing", True)
        self.led_home_x.setFlashRate(600)
        self.led_home_x.setProperty("invert_state_status", True)
        self.led_home_x.setProperty("is_joint_homed_status", True)
        self.led_home_y = StateLED(self.centralwidget)
        self.led_home_y.setObjectName(u"led_home_y")
        self.led_home_y.setGeometry(QRect(590, 520, 21, 21))
        self.led_home_y.setDiameter(10)
        self.led_home_y.setColor(QColor(255, 255, 0, 214))
        self.led_home_y.setProperty("flashing", True)
        self.led_home_y.setFlashRate(600)
        self.led_home_y.setProperty("invert_state_status", True)
        self.led_home_y.setProperty("is_joint_homed_status", True)
        self.led_home_y.setProperty("joint_number_status", 1)
        self.led_home_z = StateLED(self.centralwidget)
        self.led_home_z.setObjectName(u"led_home_z")
        self.led_home_z.setGeometry(QRect(590, 550, 21, 21))
        self.led_home_z.setDiameter(10)
        self.led_home_z.setColor(QColor(255, 255, 0, 214))
        self.led_home_z.setProperty("flashing", True)
        self.led_home_z.setFlashRate(600)
        self.led_home_z.setProperty("invert_state_status", True)
        self.led_home_z.setProperty("is_joint_homed_status", True)
        self.led_home_z.setProperty("joint_number_status", 2)
        self.actionbutton_9 = ActionButton(self.centralwidget)
        self.actionbutton_9.setObjectName(u"actionbutton_9")
        self.actionbutton_9.setGeometry(QRect(360, 685, 56, 31))
        self.actionbutton_9.setCheckable(True)
        self.actionbutton_9.setAutoExclusive(True)
        self.actionbutton_9.setProperty("indicator_option", True)
        self.actionbutton_9.setProperty("indicator_HAL_pin_option", False)
        self.actionbutton_9.setProperty("indicator_status_option", False)
        self.actionbutton_9.setProperty("checked_state_text_option", False)
        self.actionbutton_9.setProperty("python_command_option", False)
        self.actionbutton_9.setProperty("on_color", QColor(255, 0, 0))
        self.actionbutton_9.setProperty("shape_option", 0)
        self.actionbutton_9.setProperty("off_color", QColor(0, 0, 0))
        self.actionbutton_9.setProperty("indicator_size", 0.300000000000000)
        self.actionbutton_9.setProperty("circle_diameter", 10.000000000000000)
        self.actionbutton_9.setProperty("right_edge_offset", 3.000000000000001)
        self.actionbutton_9.setProperty("top_edge_offset", 3.000000000000001)
        self.actionbutton_9.setProperty("corner_radius", 4.000000000000000)
        self.actionbutton_9.setProperty("height_fraction", 0.300000000000000)
        self.actionbutton_9.setProperty("width_fraction", 0.900000000000000)
        self.actionbutton_9.setProperty("invert_the_status", False)
        self.actionbutton_9.setProperty("is_paused_status", False)
        self.actionbutton_9.setProperty("is_estopped_status", False)
        self.actionbutton_9.setProperty("is_on_status", False)
        self.actionbutton_9.setProperty("is_idle_status", False)
        self.actionbutton_9.setProperty("is_homed_status", False)
        self.actionbutton_9.setProperty("is_flood_status", False)
        self.actionbutton_9.setProperty("is_mist_status", False)
        self.actionbutton_9.setProperty("is_block_delete_status", False)
        self.actionbutton_9.setProperty("is_optional_stop_status", False)
        self.actionbutton_9.setProperty("is_joint_homed_status", False)
        self.actionbutton_9.setProperty("is_limits_overridden_status", False)
        self.actionbutton_9.setProperty("is_manual_status", False)
        self.actionbutton_9.setProperty("is_mdi_status", False)
        self.actionbutton_9.setProperty("is_auto_status", False)
        self.actionbutton_9.setProperty("is_spindle_stopped_status", False)
        self.actionbutton_9.setProperty("is_spindle_fwd_status", False)
        self.actionbutton_9.setProperty("is_spindle_rev_status", False)
        self.actionbutton_9.setProperty("joint_number_status", 0)
        self.actionbutton_9.setProperty("manual_action", True)
        self.actionbutton_9.setProperty("template_label_option", False)
        self.actionbutton_9.setProperty("joint_number", 0)
        self.actionbutton_9.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_9.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_9.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_9.setProperty("toggle_float_option", False)
        self.actionbutton_9.setProperty("float_num", 0.300000000000000)
        self.actionbutton_9.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_9.setProperty("ini_mdi_number", 0)
        self.actionbutton_9.setProperty("offset", 2.000000000000000)
        self.actionbutton_9.setProperty("h_percent", 0.900000000000000)
        self.actionbutton_9.setProperty("w_percent", 0.200000000000000)
        self.actionbutton_9.setProperty("HAL_pin_option", False)
        self.actionbutton_10 = ActionButton(self.centralwidget)
        self.actionbutton_10.setObjectName(u"actionbutton_10")
        self.actionbutton_10.setGeometry(QRect(490, 685, 56, 31))
        self.actionbutton_10.setCheckable(True)
        self.actionbutton_10.setAutoExclusive(True)
        self.actionbutton_10.setProperty("indicator_option", True)
        self.actionbutton_10.setProperty("indicator_HAL_pin_option", False)
        self.actionbutton_10.setProperty("indicator_status_option", False)
        self.actionbutton_10.setProperty("checked_state_text_option", False)
        self.actionbutton_10.setProperty("python_command_option", False)
        self.actionbutton_10.setProperty("on_color", QColor(255, 0, 0))
        self.actionbutton_10.setProperty("shape_option", 0)
        self.actionbutton_10.setProperty("off_color", QColor(0, 0, 0))
        self.actionbutton_10.setProperty("indicator_size", 0.300000000000000)
        self.actionbutton_10.setProperty("circle_diameter", 10.000000000000000)
        self.actionbutton_10.setProperty("right_edge_offset", 3.000000000000000)
        self.actionbutton_10.setProperty("top_edge_offset", 3.000000000000000)
        self.actionbutton_10.setProperty("corner_radius", 4.000000000000000)
        self.actionbutton_10.setProperty("invert_the_status", False)
        self.actionbutton_10.setProperty("is_paused_status", False)
        self.actionbutton_10.setProperty("is_estopped_status", False)
        self.actionbutton_10.setProperty("is_on_status", False)
        self.actionbutton_10.setProperty("is_idle_status", False)
        self.actionbutton_10.setProperty("is_homed_status", False)
        self.actionbutton_10.setProperty("is_flood_status", False)
        self.actionbutton_10.setProperty("is_mist_status", False)
        self.actionbutton_10.setProperty("is_block_delete_status", False)
        self.actionbutton_10.setProperty("is_optional_stop_status", False)
        self.actionbutton_10.setProperty("is_joint_homed_status", False)
        self.actionbutton_10.setProperty("is_limits_overridden_status", False)
        self.actionbutton_10.setProperty("is_manual_status", False)
        self.actionbutton_10.setProperty("is_mdi_status", False)
        self.actionbutton_10.setProperty("is_auto_status", False)
        self.actionbutton_10.setProperty("is_spindle_stopped_status", False)
        self.actionbutton_10.setProperty("is_spindle_fwd_status", False)
        self.actionbutton_10.setProperty("is_spindle_rev_status", False)
        self.actionbutton_10.setProperty("joint_number_status", 0)
        self.actionbutton_10.setProperty("mdi_action", True)
        self.actionbutton_10.setProperty("manual_action", False)
        self.actionbutton_10.setProperty("template_label_option", False)
        self.actionbutton_10.setProperty("joint_number", 0)
        self.actionbutton_10.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_10.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_10.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_10.setProperty("toggle_float_option", False)
        self.actionbutton_10.setProperty("float_num", 0.300000000000000)
        self.actionbutton_10.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_10.setProperty("ini_mdi_number", 0)
        self.actionbutton_10.setProperty("offset", 2.000000000000000)
        self.actionbutton_10.setProperty("h_percent", 0.900000000000000)
        self.actionbutton_10.setProperty("w_percent", 0.200000000000000)
        self.actionbutton_10.setProperty("HAL_pin_option", False)
        self.actionbutton_11 = ActionButton(self.centralwidget)
        self.actionbutton_11.setObjectName(u"actionbutton_11")
        self.actionbutton_11.setGeometry(QRect(610, 685, 56, 31))
        self.actionbutton_11.setStyleSheet(u"")
        self.actionbutton_11.setCheckable(True)
        self.actionbutton_11.setAutoExclusive(True)
        self.actionbutton_11.setProperty("indicator_option", True)
        self.actionbutton_11.setProperty("indicator_HAL_pin_option", False)
        self.actionbutton_11.setProperty("indicator_status_option", False)
        self.actionbutton_11.setProperty("checked_state_text_option", False)
        self.actionbutton_11.setProperty("python_command_option", False)
        self.actionbutton_11.setProperty("on_color", QColor(255, 0, 0))
        self.actionbutton_11.setProperty("shape_option", 0)
        self.actionbutton_11.setProperty("off_color", QColor(0, 0, 0))
        self.actionbutton_11.setProperty("indicator_size", 0.300000000000000)
        self.actionbutton_11.setProperty("circle_diameter", 10.000000000000000)
        self.actionbutton_11.setProperty("right_edge_offset", 3.000000000000000)
        self.actionbutton_11.setProperty("top_edge_offset", 3.000000000000000)
        self.actionbutton_11.setProperty("corner_radius", 4.000000000000000)
        self.actionbutton_11.setProperty("invert_the_status", False)
        self.actionbutton_11.setProperty("is_paused_status", False)
        self.actionbutton_11.setProperty("is_estopped_status", False)
        self.actionbutton_11.setProperty("is_on_status", False)
        self.actionbutton_11.setProperty("is_idle_status", False)
        self.actionbutton_11.setProperty("is_homed_status", False)
        self.actionbutton_11.setProperty("is_flood_status", False)
        self.actionbutton_11.setProperty("is_mist_status", False)
        self.actionbutton_11.setProperty("is_block_delete_status", False)
        self.actionbutton_11.setProperty("is_optional_stop_status", False)
        self.actionbutton_11.setProperty("is_joint_homed_status", False)
        self.actionbutton_11.setProperty("is_limits_overridden_status", False)
        self.actionbutton_11.setProperty("is_manual_status", False)
        self.actionbutton_11.setProperty("is_mdi_status", False)
        self.actionbutton_11.setProperty("is_auto_status", False)
        self.actionbutton_11.setProperty("is_spindle_stopped_status", False)
        self.actionbutton_11.setProperty("is_spindle_fwd_status", False)
        self.actionbutton_11.setProperty("is_spindle_rev_status", False)
        self.actionbutton_11.setProperty("joint_number_status", 0)
        self.actionbutton_11.setProperty("auto_action", True)
        self.actionbutton_11.setProperty("manual_action", False)
        self.actionbutton_11.setProperty("template_label_option", False)
        self.actionbutton_11.setProperty("joint_number", 0)
        self.actionbutton_11.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_11.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_11.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_11.setProperty("toggle_float_option", False)
        self.actionbutton_11.setProperty("float_num", 0.300000000000000)
        self.actionbutton_11.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_11.setProperty("ini_mdi_number", 0)
        self.actionbutton_11.setProperty("offset", 2.000000000000000)
        self.actionbutton_11.setProperty("h_percent", 0.900000000000000)
        self.actionbutton_11.setProperty("w_percent", 0.200000000000000)
        self.actionbutton_11.setProperty("HAL_pin_option", False)
        self.ScreenOptions = ScreenOptions(self.centralwidget)
        self.ScreenOptions.setObjectName(u"ScreenOptions")
        self.ScreenOptions.setGeometry(QRect(240, 820, 16, 16))
        self.ScreenOptions.setProperty("focusOverlay_option", True)
        self.ScreenOptions.setProperty("toolDialog_option", True)
        self.ScreenOptions.setProperty("tool_overlay_color", QColor(0, 0, 0, 150))
        self.ScreenOptions.setProperty("fileDialog_option", True)
        self.ScreenOptions.setProperty("file_overlay_color", QColor(0, 0, 255, 150))
        self.ScreenOptions.setProperty("keyboardDialog_option", True)
        self.ScreenOptions.setProperty("versaProbeDialog_option", True)
        self.ScreenOptions.setProperty("macroTabDialog_option", True)
        self.ScreenOptions.setProperty("camViewDialog_option", True)
        self.ScreenOptions.setProperty("toolOffsetDialog_option", True)
        self.ScreenOptions.setProperty("originOffsetDialog_option", True)
        self.ScreenOptions.setProperty("calculatorDialog_option", True)
        self.ScreenOptions.setProperty("machineLogDialog_option", True)
        self.StatusLabel_2 = StatusLabel(self.centralwidget)
        self.StatusLabel_2.setObjectName(u"StatusLabel_2")
        self.StatusLabel_2.setGeometry(QRect(210, 640, 131, 41))
        self.StatusLabel_2.setProperty("jogincr_status", True)
        self.StatusStacked = StatusStacked(self.centralwidget)
        self.StatusStacked.setObjectName(u"StatusStacked")
        self.StatusStacked.setGeometry(QRect(10, 10, 191, 441))
        self.StatusStacked.setStyleSheet(u"")
        self.page_man = QWidget()
        self.page_man.setObjectName(u"page_man")
        self.frame_man = QFrame(self.page_man)
        self.frame_man.setObjectName(u"frame_man")
        self.frame_man.setGeometry(QRect(0, 0, 191, 441))
        self.frame_man.setStyleSheet(u"")
        self.frame_man.setFrameShape(QFrame.StyledPanel)
        self.frame_man.setFrameShadow(QFrame.Raised)
        self.state_enable_gridLayout_5 = StateEnableGridLayout(self.frame_man)
        self.state_enable_gridLayout_5.setObjectName(u"state_enable_gridLayout_5")
        self.state_enable_gridLayout_5.setEnabled(False)
        self.state_enable_gridLayout_5.setGeometry(QRect(0, 260, 191, 181))
        self.state_enable_gridLayout_5.setStyleSheet(u"")
        self.state_enable_gridLayout_5.setProperty("is_on_status", True)
        self.state_enable_gridLayout_5.setProperty("is_idle_status", True)
        self.frame_3 = QFrame(self.state_enable_gridLayout_5)
        self.frame_3.setObjectName(u"frame_3")
        self.frame_3.setGeometry(QRect(0, 9, 191, 171))
        self.frame_3.setFrameShape(QFrame.NoFrame)
        self.frame_3.setFrameShadow(QFrame.Raised)
        self.jog_pos_x = ActionButton(self.frame_3)
        self.jog_pos_x.setObjectName(u"jog_pos_x")
        self.jog_pos_x.setGeometry(QRect(130, 70, 56, 32))
        self.jog_pos_x.setProperty("estop_action", False)
        self.jog_pos_x.setProperty("jog_joint_pos_action", True)
        self.jog_neg_x = ActionButton(self.frame_3)
        self.jog_neg_x.setObjectName(u"jog_neg_x")
        self.jog_neg_x.setGeometry(QRect(10, 70, 56, 32))
        self.jog_neg_x.setProperty("estop_action", False)
        self.jog_neg_x.setProperty("jog_joint_neg_action", True)
        self.jog_pos_z = ActionButton(self.frame_3)
        self.jog_pos_z.setObjectName(u"jog_pos_z")
        self.jog_pos_z.setGeometry(QRect(130, 0, 56, 32))
        self.jog_pos_z.setProperty("estop_action", False)
        self.jog_pos_z.setProperty("jog_joint_pos_action", True)
        self.jog_pos_z.setProperty("joint_number", 2)
        self.jog_pos_z.setProperty("jog_joint_number", 2)
        self.jog_neg_z = ActionButton(self.frame_3)
        self.jog_neg_z.setObjectName(u"jog_neg_z")
        self.jog_neg_z.setGeometry(QRect(10, 140, 56, 32))
        self.jog_neg_z.setProperty("estop_action", False)
        self.jog_neg_z.setProperty("jog_joint_pos_action", False)
        self.jog_neg_z.setProperty("jog_joint_neg_action", True)
        self.jog_neg_z.setProperty("joint_number", 2)
        self.jog_neg_z.setProperty("jog_joint_number", 2)
        self.jog_neg_y = ActionButton(self.frame_3)
        self.jog_neg_y.setObjectName(u"jog_neg_y")
        self.jog_neg_y.setGeometry(QRect(70, 110, 56, 32))
        self.jog_neg_y.setProperty("estop_action", False)
        self.jog_neg_y.setProperty("jog_joint_pos_action", False)
        self.jog_neg_y.setProperty("jog_joint_neg_action", True)
        self.jog_neg_y.setProperty("joint_number", 1)
        self.jog_neg_y.setProperty("jog_joint_number", 1)
        self.jog_pos_y = ActionButton(self.frame_3)
        self.jog_pos_y.setObjectName(u"jog_pos_y")
        self.jog_pos_y.setGeometry(QRect(70, 30, 56, 32))
        self.jog_pos_y.setProperty("estop_action", False)
        self.jog_pos_y.setProperty("jog_joint_pos_action", True)
        self.jog_pos_y.setProperty("joint_number", 1)
        self.jog_pos_y.setProperty("jog_joint_number", 1)
        self.JogIncrements = JogIncrements(self.frame_3)
        self.JogIncrements.setObjectName(u"JogIncrements")
        self.JogIncrements.setGeometry(QRect(80, 150, 101, 21))
        self.JogIncrements.setProperty("linear_option", True)
        self.button_home = ActionButton(self.frame_man)
        self.button_home.setObjectName(u"button_home")
        self.button_home.setGeometry(QRect(30, 10, 131, 41))
        self.button_home.setStyleSheet(u"font: 75 italic 20pt \"Noto Sans\";")
        self.button_home.setCheckable(True)
        self.button_home.setChecked(False)
        self.button_home.setProperty("checked_state_text_option", True)
        self.button_home.setProperty("estop_action", False)
        self.button_home.setProperty("home_action", True)
        self.button_home.setProperty("joint_number", -1)
        self.button_home.setProperty("state_text_option", True)
        self.actionbutton_25 = ActionButton(self.frame_man)
        self.actionbutton_25.setObjectName(u"actionbutton_25")
        self.actionbutton_25.setGeometry(QRect(130, 150, 55, 32))
        self.actionbutton_25.setProperty("spindle_fwd_action", True)
        self.actionbutton_25.setProperty("spindle_rev_action", False)
        self.actionbutton_25.setProperty("spindle_stop_action", False)
        self.actionbutton_25.setProperty("spindle_up_action", False)
        self.actionbutton_25.setProperty("spindle_down_action", False)
        self.actionbutton_25.setProperty("view_change_action", False)
        self.actionbutton_26 = ActionButton(self.frame_man)
        self.actionbutton_26.setObjectName(u"actionbutton_26")
        self.actionbutton_26.setGeometry(QRect(10, 150, 55, 32))
        self.actionbutton_26.setProperty("spindle_rev_action", True)
        self.actionbutton_26.setProperty("spindle_down_action", False)
        self.actionbutton_27 = ActionButton(self.frame_man)
        self.actionbutton_27.setObjectName(u"actionbutton_27")
        self.actionbutton_27.setGeometry(QRect(130, 190, 55, 32))
        self.actionbutton_27.setProperty("spindle_up_action", True)
        self.actionbutton_28 = ActionButton(self.frame_man)
        self.actionbutton_28.setObjectName(u"actionbutton_28")
        self.actionbutton_28.setGeometry(QRect(10, 190, 55, 32))
        self.actionbutton_28.setProperty("spindle_down_action", True)
        self.actionbutton_29 = ActionButton(self.frame_man)
        self.actionbutton_29.setObjectName(u"actionbutton_29")
        self.actionbutton_29.setGeometry(QRect(70, 161, 55, 51))
        self.actionbutton_29.setProperty("spindle_stop_action", True)
        self.actionbutton_14 = ActionButton(self.frame_man)
        self.actionbutton_14.setObjectName(u"actionbutton_14")
        self.actionbutton_14.setGeometry(QRect(10, 70, 81, 41))
        self.actionbutton_14.setProperty("origin_offset_dialog_action", True)
        self.actionbutton_14.setProperty("macro_dialog_action", False)
        self.actionbutton_13 = ActionButton(self.frame_man)
        self.actionbutton_13.setObjectName(u"actionbutton_13")
        self.actionbutton_13.setGeometry(QRect(100, 70, 81, 41))
        self.actionbutton_13.setProperty("camview_dialog_action", True)
        self.actionbutton_13.setProperty("macro_dialog_action", False)
        self.StateLED_3 = StateLED(self.frame_man)
        self.StateLED_3.setObjectName(u"StateLED_3")
        self.StateLED_3.setGeometry(QRect(140, 10, 20, 20))
        self.StateLED_3.setDiameter(10)
        self.StateLED_3.setColor(QColor(255, 255, 0, 214))
        self.StateLED_3.setProperty("flashing", True)
        self.StateLED_3.setProperty("invert_state_status", True)
        self.StateLED_3.setProperty("is_homed_status", True)
        self.StatusStacked.addWidget(self.page_man)
        self.page_mdi = QWidget()
        self.page_mdi.setObjectName(u"page_mdi")
        self.frame_mdi = QFrame(self.page_mdi)
        self.frame_mdi.setObjectName(u"frame_mdi")
        self.frame_mdi.setGeometry(QRect(0, 0, 191, 441))
        self.frame_mdi.setStyleSheet(u"")
        self.frame_mdi.setFrameShape(QFrame.StyledPanel)
        self.frame_mdi.setFrameShadow(QFrame.Raised)
        self.actionbutton_12 = ActionButton(self.frame_mdi)
        self.actionbutton_12.setObjectName(u"actionbutton_12")
        self.actionbutton_12.setGeometry(QRect(50, 80, 91, 41))
        self.actionbutton_12.setProperty("macro_dialog_action", True)
        self.actionbutton_32 = ActionButton(self.frame_mdi)
        self.actionbutton_32.setObjectName(u"actionbutton_32")
        self.actionbutton_32.setGeometry(QRect(50, 180, 91, 41))
        self.actionbutton_32.setProperty("mdi_command_action", True)
        self.actionbutton_33 = ActionButton(self.frame_mdi)
        self.actionbutton_33.setObjectName(u"actionbutton_33")
        self.actionbutton_33.setGeometry(QRect(50, 230, 91, 41))
        self.actionbutton_33.setProperty("mdi_command_action", True)
        self.actionbutton_38 = ActionButton(self.frame_mdi)
        self.actionbutton_38.setObjectName(u"actionbutton_38")
        self.actionbutton_38.setGeometry(QRect(50, 286, 91, 41))
        self.actionbutton_38.setProperty("zero_g5x_action", True)
        self.actionbutton_72 = ActionButton(self.frame_mdi)
        self.actionbutton_72.setObjectName(u"actionbutton_72")
        self.actionbutton_72.setGeometry(QRect(50, 340, 91, 41))
        self.actionbutton_72.setProperty("zero_g5x_action", False)
        self.actionbutton_72.setProperty("zero_g92_action", True)
        self.StatusStacked.addWidget(self.page_mdi)
        self.page_auto = QWidget()
        self.page_auto.setObjectName(u"page_auto")
        self.frame_auto = QFrame(self.page_auto)
        self.frame_auto.setObjectName(u"frame_auto")
        self.frame_auto.setGeometry(QRect(0, 0, 191, 441))
        self.frame_auto.setStyleSheet(u"")
        self.frame_auto.setFrameShape(QFrame.StyledPanel)
        self.frame_auto.setFrameShadow(QFrame.Raised)
        self.actionbutton_load = ActionButton(self.frame_auto)
        self.actionbutton_load.setObjectName(u"actionbutton_load")
        self.actionbutton_load.setGeometry(QRect(20, 10, 61, 61))
        self.actionbutton_load.setProperty("estop_action", False)
        self.actionbutton_load.setProperty("load_dialog_action", True)
        self.actionbutton_4 = ActionButton(self.frame_auto)
        self.actionbutton_4.setObjectName(u"actionbutton_4")
        self.actionbutton_4.setGeometry(QRect(100, 10, 61, 31))
        self.actionbutton_4.setProperty("estop_action", False)
        self.actionbutton_4.setProperty("run_action", True)
        self.actionbutton_19 = ActionButton(self.frame_auto)
        self.actionbutton_19.setObjectName(u"actionbutton_19")
        self.actionbutton_19.setGeometry(QRect(20, 100, 61, 32))
        self.actionbutton_19.setProperty("view_change_action", True)
        self.actionbutton_20 = ActionButton(self.frame_auto)
        self.actionbutton_20.setObjectName(u"actionbutton_20")
        self.actionbutton_20.setGeometry(QRect(100, 100, 61, 32))
        self.actionbutton_20.setProperty("view_change_action", True)
        self.actionbutton_21 = ActionButton(self.frame_auto)
        self.actionbutton_21.setObjectName(u"actionbutton_21")
        self.actionbutton_21.setGeometry(QRect(20, 140, 61, 32))
        self.actionbutton_21.setProperty("view_change_action", True)
        self.actionbutton_22 = ActionButton(self.frame_auto)
        self.actionbutton_22.setObjectName(u"actionbutton_22")
        self.actionbutton_22.setGeometry(QRect(100, 140, 61, 32))
        self.actionbutton_22.setProperty("view_change_action", True)
        self.actionbutton_23 = ActionButton(self.frame_auto)
        self.actionbutton_23.setObjectName(u"actionbutton_23")
        self.actionbutton_23.setGeometry(QRect(20, 180, 61, 32))
        self.actionbutton_23.setProperty("view_change_action", True)
        self.actionbutton_24 = ActionButton(self.frame_auto)
        self.actionbutton_24.setObjectName(u"actionbutton_24")
        self.actionbutton_24.setGeometry(QRect(100, 180, 61, 32))
        self.actionbutton_24.setProperty("view_change_action", True)
        self.actionbutton_15 = ActionButton(self.frame_auto)
        self.actionbutton_15.setObjectName(u"actionbutton_15")
        self.actionbutton_15.setGeometry(QRect(20, 250, 61, 27))
        self.actionbutton_15.setProperty("view_change_action", True)
        self.actionbutton_15.setProperty("joint_number", 0)
        self.actionbutton_15.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_15.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_15.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_15.setProperty("toggle_float_option", False)
        self.actionbutton_15.setProperty("float_num", 100.000000000000000)
        self.actionbutton_15.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_15.setProperty("ini_mdi_number", 0)
        self.actionbutton_16 = ActionButton(self.frame_auto)
        self.actionbutton_16.setObjectName(u"actionbutton_16")
        self.actionbutton_16.setGeometry(QRect(100, 250, 61, 27))
        self.actionbutton_16.setProperty("view_change_action", True)
        self.actionbutton_16.setProperty("joint_number", 0)
        self.actionbutton_16.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_16.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_16.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_16.setProperty("toggle_float_option", False)
        self.actionbutton_16.setProperty("float_num", 100.000000000000000)
        self.actionbutton_16.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_16.setProperty("ini_mdi_number", 0)
        self.Roundbutton = RoundButton(self.frame_auto)
        self.Roundbutton.setObjectName(u"Roundbutton")
        self.Roundbutton.setGeometry(QRect(40, 380, 45, 41))
        self.Roundbutton.setCheckable(True)
        self.Roundbutton.setProperty("view_change_action", True)
        self.Roundbutton.setProperty("joint_number", 0)
        self.Roundbutton.setProperty("incr_imperial_number", 0.010000000000000)
        self.Roundbutton.setProperty("incr_mm_number", -1.000000000000000)
        self.Roundbutton.setProperty("incr_angular_number", -1.000000000000000)
        self.Roundbutton.setProperty("toggle_float_option", False)
        self.Roundbutton.setProperty("float_num", 100.000000000000000)
        self.Roundbutton.setProperty("float_alt_num", 50.000000000000000)
        self.Roundbutton.setProperty("ini_mdi_number", 0)
        self.Roundbutton.setProperty("image_path", QPixmap(u"../../../gmoccapy/images/zoom-in.png"))
        self.Roundbutton.setProperty("false_image_path", QPixmap(u"../../../gmoccapy/images/zoom-in.png"))
        self.Roundbutton_2 = RoundButton(self.frame_auto)
        self.Roundbutton_2.setObjectName(u"Roundbutton_2")
        self.Roundbutton_2.setGeometry(QRect(110, 380, 45, 41))
        self.Roundbutton_2.setCheckable(True)
        self.Roundbutton_2.setProperty("view_change_action", True)
        self.Roundbutton_2.setProperty("joint_number", 0)
        self.Roundbutton_2.setProperty("incr_imperial_number", 0.010000000000000)
        self.Roundbutton_2.setProperty("incr_mm_number", 0.025000000000000)
        self.Roundbutton_2.setProperty("incr_angular_number", -1.000000000000000)
        self.Roundbutton_2.setProperty("toggle_float_option", False)
        self.Roundbutton_2.setProperty("float_num", 100.000000000000000)
        self.Roundbutton_2.setProperty("float_alt_num", 50.000000000000000)
        self.Roundbutton_2.setProperty("ini_mdi_number", 0)
        self.Roundbutton_2.setProperty("image_path", QPixmap(u"../../../gmoccapy/images/zoom-out.png"))
        self.Roundbutton_2.setProperty("false_image_path", QPixmap(u"../../../gmoccapy/images/zoom-out.png"))
        self.actionbutton_17 = ActionButton(self.frame_auto)
        self.actionbutton_17.setObjectName(u"actionbutton_17")
        self.actionbutton_17.setGeometry(QRect(20, 320, 61, 27))
        self.actionbutton_17.setProperty("view_change_action", True)
        self.actionbutton_17.setProperty("joint_number", 0)
        self.actionbutton_17.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_17.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_17.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_17.setProperty("toggle_float_option", False)
        self.actionbutton_17.setProperty("float_num", 100.000000000000000)
        self.actionbutton_17.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_17.setProperty("ini_mdi_number", 0)
        self.actionbutton_18 = ActionButton(self.frame_auto)
        self.actionbutton_18.setObjectName(u"actionbutton_18")
        self.actionbutton_18.setGeometry(QRect(100, 320, 61, 27))
        self.actionbutton_18.setProperty("view_change_action", True)
        self.actionbutton_18.setProperty("joint_number", 0)
        self.actionbutton_18.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_18.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_18.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_18.setProperty("toggle_float_option", False)
        self.actionbutton_18.setProperty("float_num", 100.000000000000000)
        self.actionbutton_18.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_18.setProperty("ini_mdi_number", 0)
        self.actionbutton_34 = ActionButton(self.frame_auto)
        self.actionbutton_34.setObjectName(u"actionbutton_34")
        self.actionbutton_34.setGeometry(QRect(20, 350, 61, 27))
        self.actionbutton_34.setProperty("view_change_action", True)
        self.actionbutton_34.setProperty("joint_number", 0)
        self.actionbutton_34.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_34.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_34.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_34.setProperty("toggle_float_option", False)
        self.actionbutton_34.setProperty("float_num", 100.000000000000000)
        self.actionbutton_34.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_34.setProperty("ini_mdi_number", 0)
        self.actionbutton_35 = ActionButton(self.frame_auto)
        self.actionbutton_35.setObjectName(u"actionbutton_35")
        self.actionbutton_35.setGeometry(QRect(100, 350, 61, 27))
        self.actionbutton_35.setProperty("view_change_action", True)
        self.actionbutton_35.setProperty("joint_number", 0)
        self.actionbutton_35.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_35.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_35.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_35.setProperty("toggle_float_option", False)
        self.actionbutton_35.setProperty("float_num", 100.000000000000000)
        self.actionbutton_35.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_35.setProperty("ini_mdi_number", 0)
        self.actionbutton_36 = ActionButton(self.frame_auto)
        self.actionbutton_36.setObjectName(u"actionbutton_36")
        self.actionbutton_36.setGeometry(QRect(20, 280, 61, 27))
        self.actionbutton_36.setProperty("view_change_action", True)
        self.actionbutton_36.setProperty("joint_number", 0)
        self.actionbutton_36.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_36.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_36.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_36.setProperty("toggle_float_option", False)
        self.actionbutton_36.setProperty("float_num", 100.000000000000000)
        self.actionbutton_36.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_36.setProperty("ini_mdi_number", 0)
        self.actionbutton_37 = ActionButton(self.frame_auto)
        self.actionbutton_37.setObjectName(u"actionbutton_37")
        self.actionbutton_37.setGeometry(QRect(100, 280, 61, 27))
        self.actionbutton_37.setProperty("view_change_action", True)
        self.actionbutton_37.setProperty("joint_number", 0)
        self.actionbutton_37.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_37.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_37.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_37.setProperty("toggle_float_option", False)
        self.actionbutton_37.setProperty("float_num", 100.000000000000000)
        self.actionbutton_37.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_37.setProperty("ini_mdi_number", 0)
        self.actionbutton_39 = ActionButton(self.frame_auto)
        self.actionbutton_39.setObjectName(u"actionbutton_39")
        self.actionbutton_39.setGeometry(QRect(100, 50, 61, 31))
        self.actionbutton_39.setProperty("estop_action", False)
        self.actionbutton_39.setProperty("run_action", False)
        self.actionbutton_39.setProperty("step_action", True)
        self.actionbutton_39.setProperty("template_label_option", False)
        self.actionbutton_39.setProperty("joint_number", 0)
        self.actionbutton_39.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_39.setProperty("incr_mm_number", 0.025000000000000)
        self.actionbutton_39.setProperty("incr_angular_number", -1.000000000000000)
        self.actionbutton_39.setProperty("toggle_float_option", False)
        self.actionbutton_39.setProperty("float_num", 100.000000000000000)
        self.actionbutton_39.setProperty("float_alt_num", 50.000000000000000)
        self.actionbutton_39.setProperty("ini_mdi_number", 0)
        self.StatusStacked.addWidget(self.page_auto)
        self.mcodes_label = StatusLabel(self.centralwidget)
        self.mcodes_label.setObjectName(u"mcodes_label")
        self.mcodes_label.setGeometry(QRect(20, 725, 311, 31))
        self.mcodes_label.setTextFormat(Qt.RichText)
        self.mcodes_label.setProperty("gcodes_status", False)
        self.mcodes_label.setProperty("mcodes_status", True)
        self.frame_auto_2 = QFrame(self.centralwidget)
        self.frame_auto_2.setObjectName(u"frame_auto_2")
        self.frame_auto_2.setGeometry(QRect(10, 460, 341, 221))
        self.frame_auto_2.setStyleSheet(u"")
        self.frame_auto_2.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_2.setFrameShadow(QFrame.Raised)
        self.actionbutton_override_limits = ActionButton(self.frame_auto_2)
        self.actionbutton_override_limits.setObjectName(u"actionbutton_override_limits")
        self.actionbutton_override_limits.setGeometry(QRect(130, 10, 121, 27))
        self.actionbutton_override_limits.setProperty("limits_override_action", True)
        self.StateLED_9 = StateLED(self.frame_auto_2)
        self.StateLED_9.setObjectName(u"StateLED_9")
        self.StateLED_9.setGeometry(QRect(230, 0, 31, 41))
        self.StateLED_9.setDiameter(10)
        self.StateLED_9.setProperty("flashing", False)
        self.StateLED_9.setProperty("is_paused_status", False)
        self.StateLED_9.setProperty("is_flood_status", False)
        self.StateLED_9.setProperty("is_block_delete_status", False)
        self.StateLED_9.setProperty("is_limits_overridden_status", True)
        self.StateLED_9.setProperty("is_limits_overriden_status", True)
        self.button_estop = ActionButton(self.frame_auto_2)
        self.button_estop.setObjectName(u"button_estop")
        self.button_estop.setGeometry(QRect(10, 10, 101, 41))
        self.button_estop.setStyleSheet(u"font: 75 italic 20pt \"Noto Sans\";")
        self.button_estop.setCheckable(True)
        self.button_estop.setChecked(False)
        self.button_estop.setProperty("indicator_option", True)
        self.button_estop.setProperty("indicator_HAL_pin_option", False)
        self.button_estop.setProperty("indicator_status_option", True)
        self.button_estop.setProperty("checked_state_text_option", True)
        self.button_estop.setProperty("python_command_option", False)
        self.button_estop.setProperty("on_color", QColor(255, 0, 0))
        self.button_estop.setProperty("shape_option", 3)
        self.button_estop.setProperty("off_color", QColor(20, 233, 22))
        self.button_estop.setProperty("indicator_size", 0.300000000000000)
        self.button_estop.setProperty("circle_diameter", 15.000000000000000)
        self.button_estop.setProperty("right_edge_offset", 2.000000000000000)
        self.button_estop.setProperty("corner_radius", 3.000000000000000)
        self.button_estop.setProperty("height_fraction", 0.700000000000000)
        self.button_estop.setProperty("width_fraction", 0.100000000000000)
        self.button_estop.setProperty("invert_the_status", False)
        self.button_estop.setProperty("is_paused_status", False)
        self.button_estop.setProperty("is_estopped_status", True)
        self.button_estop.setProperty("is_on_status", False)
        self.button_estop.setProperty("is_idle_status", False)
        self.button_estop.setProperty("is_homed_status", False)
        self.button_estop.setProperty("is_flood_status", False)
        self.button_estop.setProperty("is_mist_status", False)
        self.button_estop.setProperty("is_block_delete_status", False)
        self.button_estop.setProperty("is_optional_stop_status", False)
        self.button_estop.setProperty("is_joint_homed_status", False)
        self.button_estop.setProperty("is_limits_overridden_status", False)
        self.button_estop.setProperty("is_manual_status", False)
        self.button_estop.setProperty("is_mdi_status", False)
        self.button_estop.setProperty("is_auto_status", False)
        self.button_estop.setProperty("is_spindle_stopped_status", False)
        self.button_estop.setProperty("is_spindle_fwd_status", False)
        self.button_estop.setProperty("is_spindle_rev_status", False)
        self.button_estop.setProperty("joint_number_status", 0)
        self.button_estop.setProperty("estop_action", True)
        self.button_estop.setProperty("template_label_option", False)
        self.button_estop.setProperty("joint_number", 0)
        self.button_estop.setProperty("incr_imperial_number", 0.010000000000000)
        self.button_estop.setProperty("incr_mm_number", 0.025000000000000)
        self.button_estop.setProperty("incr_angular_number", -1.000000000000000)
        self.button_estop.setProperty("toggle_float_option", False)
        self.button_estop.setProperty("float_num", 0.300000000000000)
        self.button_estop.setProperty("float_alt_num", 50.000000000000000)
        self.button_estop.setProperty("ini_mdi_number", 0)
        self.button_estop.setProperty("h_percent", 1.000000000000000)
        self.button_estop.setProperty("w_percent", 0.100000000000000)
        self.button_estop.setProperty("python_command_action", False)
        self.button_estop.setProperty("state_text_option", True)
        self.button_machineon = ActionButton(self.frame_auto_2)
        self.button_machineon.setObjectName(u"button_machineon")
        self.button_machineon.setGeometry(QRect(10, 60, 101, 41))
        self.button_machineon.setStyleSheet(u"font: 75 italic 20pt \"Noto Sans\";")
        self.button_machineon.setCheckable(True)
        self.button_machineon.setChecked(False)
        self.button_machineon.setProperty("indicator_option", True)
        self.button_machineon.setProperty("indicator_HAL_pin_option", False)
        self.button_machineon.setProperty("indicator_status_option", True)
        self.button_machineon.setProperty("checked_state_text_option", True)
        self.button_machineon.setProperty("python_command_option", True)
        self.button_machineon.setProperty("on_color", QColor(22, 241, 31))
        self.button_machineon.setProperty("shape_option", 3)
        self.button_machineon.setProperty("off_color", QColor(0, 0, 0))
        self.button_machineon.setProperty("indicator_size", 0.300000000000000)
        self.button_machineon.setProperty("circle_diameter", 15.000000000000000)
        self.button_machineon.setProperty("right_edge_offset", 2.000000000000000)
        self.button_machineon.setProperty("corner_radius", 3.000000000000000)
        self.button_machineon.setProperty("height_fraction", 0.700000000000000)
        self.button_machineon.setProperty("width_fraction", 0.100000000000000)
        self.button_machineon.setProperty("invert_the_status", False)
        self.button_machineon.setProperty("is_paused_status", False)
        self.button_machineon.setProperty("is_estopped_status", False)
        self.button_machineon.setProperty("is_on_status", True)
        self.button_machineon.setProperty("is_idle_status", False)
        self.button_machineon.setProperty("is_homed_status", False)
        self.button_machineon.setProperty("is_flood_status", False)
        self.button_machineon.setProperty("is_mist_status", False)
        self.button_machineon.setProperty("is_block_delete_status", False)
        self.button_machineon.setProperty("is_optional_stop_status", False)
        self.button_machineon.setProperty("is_joint_homed_status", False)
        self.button_machineon.setProperty("is_limits_overridden_status", False)
        self.button_machineon.setProperty("is_manual_status", False)
        self.button_machineon.setProperty("is_mdi_status", False)
        self.button_machineon.setProperty("is_auto_status", False)
        self.button_machineon.setProperty("is_spindle_stopped_status", False)
        self.button_machineon.setProperty("is_spindle_fwd_status", False)
        self.button_machineon.setProperty("is_spindle_rev_status", False)
        self.button_machineon.setProperty("joint_number_status", 0)
        self.button_machineon.setProperty("estop_action", False)
        self.button_machineon.setProperty("machine_on_action", True)
        self.button_machineon.setProperty("template_label_option", False)
        self.button_machineon.setProperty("joint_number", 0)
        self.button_machineon.setProperty("incr_imperial_number", 0.010000000000000)
        self.button_machineon.setProperty("incr_mm_number", 0.025000000000000)
        self.button_machineon.setProperty("incr_angular_number", -1.000000000000000)
        self.button_machineon.setProperty("toggle_float_option", False)
        self.button_machineon.setProperty("float_num", 0.300000000000000)
        self.button_machineon.setProperty("float_alt_num", 50.000000000000000)
        self.button_machineon.setProperty("ini_mdi_number", 0)
        self.button_machineon.setProperty("h_percent", 0.900000000000000)
        self.button_machineon.setProperty("w_percent", 0.100000000000000)
        self.button_machineon.setProperty("python_command_action", True)
        self.button_machineon.setProperty("state_text_option", True)
        self.actionbutton_flood = ActionButton(self.frame_auto_2)
        self.actionbutton_flood.setObjectName(u"actionbutton_flood")
        self.actionbutton_flood.setGeometry(QRect(130, 100, 121, 27))
        self.actionbutton_flood.setCheckable(False)
        self.actionbutton_flood.setProperty("limits_override_action", False)
        self.actionbutton_flood.setProperty("flood_action", True)
        self.actionbutton_mist = ActionButton(self.frame_auto_2)
        self.actionbutton_mist.setObjectName(u"actionbutton_mist")
        self.actionbutton_mist.setGeometry(QRect(130, 130, 121, 27))
        self.actionbutton_mist.setCheckable(False)
        self.actionbutton_mist.setProperty("limits_override_action", False)
        self.actionbutton_mist.setProperty("mist_action", True)
        self.actionbutton_block_delete = ActionButton(self.frame_auto_2)
        self.actionbutton_block_delete.setObjectName(u"actionbutton_block_delete")
        self.actionbutton_block_delete.setGeometry(QRect(130, 40, 121, 27))
        self.actionbutton_block_delete.setCheckable(False)
        self.actionbutton_block_delete.setProperty("limits_override_action", False)
        self.actionbutton_block_delete.setProperty("block_delete_action", True)
        self.actionbutton_optional_stop = ActionButton(self.frame_auto_2)
        self.actionbutton_optional_stop.setObjectName(u"actionbutton_optional_stop")
        self.actionbutton_optional_stop.setGeometry(QRect(130, 70, 121, 27))
        self.actionbutton_optional_stop.setCheckable(False)
        self.actionbutton_optional_stop.setProperty("limits_override_action", False)
        self.actionbutton_optional_stop.setProperty("block_delete_action", False)
        self.actionbutton_optional_stop.setProperty("optional_stop_action", True)
        self.StateLED_8 = StateLED(self.frame_auto_2)
        self.StateLED_8.setObjectName(u"StateLED_8")
        self.StateLED_8.setGeometry(QRect(230, 30, 31, 41))
        self.StateLED_8.setDiameter(10)
        self.StateLED_8.setColor(QColor(85, 255, 0))
        self.StateLED_8.setProperty("flashing", False)
        self.StateLED_8.setProperty("is_paused_status", False)
        self.StateLED_8.setProperty("is_flood_status", False)
        self.StateLED_8.setProperty("is_block_delete_status", True)
        self.StateLED_7 = StateLED(self.frame_auto_2)
        self.StateLED_7.setObjectName(u"StateLED_7")
        self.StateLED_7.setGeometry(QRect(230, 60, 31, 41))
        self.StateLED_7.setDiameter(10)
        self.StateLED_7.setColor(QColor(85, 255, 0))
        self.StateLED_7.setProperty("flashing", False)
        self.StateLED_7.setProperty("invert_state_status", False)
        self.StateLED_7.setProperty("is_paused_status", False)
        self.StateLED_7.setProperty("is_flood_status", False)
        self.StateLED_7.setProperty("is_optional_stop_status", True)
        self.StateLED_7.setProperty("state", False)
        self.StateLED_5 = StateLED(self.frame_auto_2)
        self.StateLED_5.setObjectName(u"StateLED_5")
        self.StateLED_5.setGeometry(QRect(230, 100, 31, 21))
        self.StateLED_5.setDiameter(10)
        self.StateLED_5.setColor(QColor(85, 255, 0))
        self.StateLED_5.setProperty("flashing", False)
        self.StateLED_5.setProperty("is_paused_status", False)
        self.StateLED_5.setProperty("is_flood_status", True)
        self.StateLED_6 = StateLED(self.frame_auto_2)
        self.StateLED_6.setObjectName(u"StateLED_6")
        self.StateLED_6.setGeometry(QRect(230, 130, 31, 21))
        self.StateLED_6.setDiameter(10)
        self.StateLED_6.setColor(QColor(85, 255, 0))
        self.StateLED_6.setProperty("flashing", False)
        self.StateLED_6.setProperty("is_paused_status", False)
        self.StateLED_6.setProperty("is_mist_status", True)
        self.actionbutton_6 = ActionButton(self.frame_auto_2)
        self.actionbutton_6.setObjectName(u"actionbutton_6")
        self.actionbutton_6.setGeometry(QRect(10, 110, 101, 51))
        self.actionbutton_6.setProperty("estop_action", False)
        self.actionbutton_6.setProperty("abort_action", True)
        self.actionbutton_6.setProperty("pause_action", False)
        self.actionbutton_5 = ActionButton(self.frame_auto_2)
        self.actionbutton_5.setObjectName(u"actionbutton_5")
        self.actionbutton_5.setGeometry(QRect(260, 10, 61, 61))
        self.actionbutton_5.setCheckable(False)
        self.actionbutton_5.setChecked(False)
        self.actionbutton_5.setProperty("indicator_option", False)
        self.actionbutton_5.setProperty("checked_state_text_option", True)
        self.actionbutton_5.setProperty("python_command_option", False)
        self.actionbutton_5.setProperty("estop_action", False)
        self.actionbutton_5.setProperty("abort_action", False)
        self.actionbutton_5.setProperty("pause_action", True)
        self.actionbutton_5.setProperty("state_text_option", False)
        self.StateLED_4 = StateLED(self.frame_auto_2)
        self.StateLED_4.setObjectName(u"StateLED_4")
        self.StateLED_4.setGeometry(QRect(300, 10, 31, 16))
        self.StateLED_4.setDiameter(10)
        self.StateLED_4.setProperty("flashing", True)
        self.StateLED_4.setProperty("is_paused_status", True)
        self.pushButton = QPushButton(self.frame_auto_2)
        self.pushButton.setObjectName(u"pushButton")
        self.pushButton.setGeometry(QRect(260, 90, 61, 41))
        self.pushButton.setCheckable(False)
        self.statuslabel_3 = StatusLabel(self.frame_auto_2)
        self.statuslabel_3.setObjectName(u"statuslabel_3")
        self.statuslabel_3.setGeometry(QRect(210, 170, 111, 21))
        self.statuslabel_3.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.statuslabel_3.setProperty("machine_state_status", True)
        self.label_17 = QLabel(self.frame_auto_2)
        self.label_17.setObjectName(u"label_17")
        self.label_17.setGeometry(QRect(120, 170, 91, 21))
        self.frame_auto_3 = QFrame(self.centralwidget)
        self.frame_auto_3.setObjectName(u"frame_auto_3")
        self.frame_auto_3.setGeometry(QRect(350, 460, 331, 221))
        self.frame_auto_3.setStyleSheet(u"")
        self.frame_auto_3.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_3.setFrameShadow(QFrame.Raised)
        self.statuslabel_2 = StatusLabel(self.frame_auto_3)
        self.statuslabel_2.setObjectName(u"statuslabel_2")
        self.statuslabel_2.setGeometry(QRect(10, 10, 291, 16))
        self.statuslabel_2.setProperty("feed_override_status", False)
        self.statuslabel_2.setProperty("machine_state_status", False)
        self.statuslabel_2.setProperty("time_stamp_status", True)
        self.frame_auto_4 = QFrame(self.centralwidget)
        self.frame_auto_4.setObjectName(u"frame_auto_4")
        self.frame_auto_4.setGeometry(QRect(840, 460, 181, 221))
        self.frame_auto_4.setStyleSheet(u"")
        self.frame_auto_4.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_4.setFrameShadow(QFrame.Raised)
        self.actionbutton_7 = ActionButton(self.frame_auto_4)
        self.actionbutton_7.setObjectName(u"actionbutton_7")
        self.actionbutton_7.setGeometry(QRect(10, 10, 45, 27))
        self.actionbutton_7.setProperty("indicator_option", True)
        self.actionbutton_7.setProperty("jog_incr_action", True)
        self.actionbutton_7.setProperty("incr_imperial_number", 0.001000000000000)
        self.actionbutton_7.setProperty("incr_mm_number", 0.010000000000000)
        self.actionbutton_7.setProperty("HAL_pin_option", False)
        self.actionbutton_8 = ActionButton(self.frame_auto_4)
        self.actionbutton_8.setObjectName(u"actionbutton_8")
        self.actionbutton_8.setGeometry(QRect(60, 10, 45, 27))
        self.actionbutton_8.setProperty("indicator_option", True)
        self.actionbutton_8.setProperty("jog_incr_action", True)
        self.actionbutton_8.setProperty("incr_imperial_number", 0.010000000000000)
        self.actionbutton_8.setProperty("incr_mm_number", 0.100000000000000)
        self.actionbutton_8.setProperty("HAL_pin_option", False)
        self.actionbutton_30 = ActionButton(self.frame_auto_4)
        self.actionbutton_30.setObjectName(u"actionbutton_30")
        self.actionbutton_30.setGeometry(QRect(110, 10, 45, 27))
        self.actionbutton_30.setProperty("indicator_option", True)
        self.actionbutton_30.setProperty("indicator_status_option", False)
        self.actionbutton_30.setProperty("jog_incr_action", True)
        self.actionbutton_30.setProperty("incr_imperial_number", 0.100000000000000)
        self.actionbutton_30.setProperty("incr_mm_number", 1.000000000000000)
        self.actionbutton_30.setProperty("HAL_pin_option", False)
        self.btn_toggle_continuous = ActionButton(self.frame_auto_4)
        self.btn_toggle_continuous.setObjectName(u"btn_toggle_continuous")
        self.btn_toggle_continuous.setGeometry(QRect(20, 40, 121, 27))
        self.btn_toggle_continuous.setCheckable(True)
        self.btn_toggle_continuous.setChecked(False)
        self.btn_toggle_continuous.setProperty("indicator_option", True)
        self.btn_toggle_continuous.setProperty("indicator_HAL_pin_option", False)
        self.btn_toggle_continuous.setProperty("indicator_status_option", False)
        self.btn_toggle_continuous.setProperty("checked_state_text_option", True)
        self.btn_toggle_continuous.setProperty("python_command_option", False)
        self.btn_toggle_continuous.setProperty("on_color", QColor(255, 0, 0))
        self.btn_toggle_continuous.setProperty("shape_option", 0)
        self.btn_toggle_continuous.setProperty("off_color", QColor(0, 0, 0))
        self.btn_toggle_continuous.setProperty("indicator_size", 0.300000000000000)
        self.btn_toggle_continuous.setProperty("circle_diameter", 10.000000000000000)
        self.btn_toggle_continuous.setProperty("right_edge_offset", 0.000000000000000)
        self.btn_toggle_continuous.setProperty("top_edge_offset", 0.000000000000000)
        self.btn_toggle_continuous.setProperty("corner_radius", 5.000000000000000)
        self.btn_toggle_continuous.setProperty("height_fraction", 0.300000000000000)
        self.btn_toggle_continuous.setProperty("width_fraction", 0.900000000000000)
        self.btn_toggle_continuous.setProperty("invert_the_status", False)
        self.btn_toggle_continuous.setProperty("is_paused_status", False)
        self.btn_toggle_continuous.setProperty("is_estopped_status", False)
        self.btn_toggle_continuous.setProperty("is_on_status", False)
        self.btn_toggle_continuous.setProperty("is_idle_status", False)
        self.btn_toggle_continuous.setProperty("is_homed_status", False)
        self.btn_toggle_continuous.setProperty("is_flood_status", False)
        self.btn_toggle_continuous.setProperty("is_mist_status", False)
        self.btn_toggle_continuous.setProperty("is_block_delete_status", False)
        self.btn_toggle_continuous.setProperty("is_optional_stop_status", False)
        self.btn_toggle_continuous.setProperty("is_joint_homed_status", False)
        self.btn_toggle_continuous.setProperty("is_limits_overridden_status", False)
        self.btn_toggle_continuous.setProperty("is_manual_status", False)
        self.btn_toggle_continuous.setProperty("is_mdi_status", False)
        self.btn_toggle_continuous.setProperty("is_auto_status", False)
        self.btn_toggle_continuous.setProperty("is_spindle_stopped_status", False)
        self.btn_toggle_continuous.setProperty("is_spindle_fwd_status", False)
        self.btn_toggle_continuous.setProperty("is_spindle_rev_status", False)
        self.btn_toggle_continuous.setProperty("joint_number_status", 0)
        self.btn_toggle_continuous.setProperty("estop_action", False)
        self.btn_toggle_continuous.setProperty("jog_incr_action", False)
        self.btn_toggle_continuous.setProperty("template_label_option", False)
        self.btn_toggle_continuous.setProperty("joint_number", 0)
        self.btn_toggle_continuous.setProperty("incr_imperial_number", 0.000000000000000)
        self.btn_toggle_continuous.setProperty("incr_mm_number", 0.000000000000000)
        self.btn_toggle_continuous.setProperty("incr_angular_number", -1.000000000000000)
        self.btn_toggle_continuous.setProperty("toggle_float_option", False)
        self.btn_toggle_continuous.setProperty("float_num", 0.300000000000000)
        self.btn_toggle_continuous.setProperty("float_alt_num", 50.000000000000000)
        self.btn_toggle_continuous.setProperty("ini_mdi_number", 0)
        self.btn_toggle_continuous.setProperty("HAL_pin_option", False)
        self.statusadjustmentbar = StatusAdjustmentBar(self.frame_auto_4)
        self.statusadjustmentbar.setObjectName(u"statusadjustmentbar")
        self.statusadjustmentbar.setGeometry(QRect(-10, 180, 201, 52))
        self.statusadjustmentbar.setProperty("rapid_rate", False)
        self.statusadjustmentbar.setProperty("jograte_rate", True)
        self.statusadjustmentbar_2 = StatusAdjustmentBar(self.frame_auto_4)
        self.statusadjustmentbar_2.setObjectName(u"statusadjustmentbar_2")
        self.statusadjustmentbar_2.setGeometry(QRect(-10, 140, 201, 52))
        self.statusadjustmentbar_2.setProperty("rapid_rate", False)
        self.statusadjustmentbar_2.setProperty("spindle_rate", True)
        self.statusadjustmentbar_2.setProperty("jograte_rate", False)
        self.statusadjustmentbar_3 = StatusAdjustmentBar(self.frame_auto_4)
        self.statusadjustmentbar_3.setObjectName(u"statusadjustmentbar_3")
        self.statusadjustmentbar_3.setGeometry(QRect(-10, 100, 201, 52))
        self.statusadjustmentbar_3.setProperty("rapid_rate", False)
        self.statusadjustmentbar_3.setProperty("feed_rate", True)
        self.statusadjustmentbar_3.setProperty("spindle_rate", False)
        self.statusadjustmentbar_3.setProperty("jograte_rate", False)
        self.statusadjustmentbar_4 = StatusAdjustmentBar(self.frame_auto_4)
        self.statusadjustmentbar_4.setObjectName(u"statusadjustmentbar_4")
        self.statusadjustmentbar_4.setGeometry(QRect(-10, 60, 201, 52))
        self.statusadjustmentbar_4.setProperty("rapid_rate", True)
        self.statusadjustmentbar_4.setProperty("feed_rate", False)
        self.statusadjustmentbar_4.setProperty("spindle_rate", False)
        self.statusadjustmentbar_4.setProperty("jograte_rate", False)
        self.statusadjustmentbar_4.setProperty("show_toggle_button", True)
        self.statusadjustmentbar_4.setProperty("show_setting_menu", True)
        self.frame_auto_6 = QFrame(self.centralwidget)
        self.frame_auto_6.setObjectName(u"frame_auto_6")
        self.frame_auto_6.setGeometry(QRect(10, 680, 341, 41))
        self.frame_auto_6.setStyleSheet(u"")
        self.frame_auto_6.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_6.setFrameShadow(QFrame.Raised)
        self.frame_auto_7 = QFrame(self.centralwidget)
        self.frame_auto_7.setObjectName(u"frame_auto_7")
        self.frame_auto_7.setGeometry(QRect(350, 680, 331, 41))
        self.frame_auto_7.setStyleSheet(u"")
        self.frame_auto_7.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_7.setFrameShadow(QFrame.Raised)
        self.frame_auto_9 = QFrame(self.centralwidget)
        self.frame_auto_9.setObjectName(u"frame_auto_9")
        self.frame_auto_9.setGeometry(QRect(10, 720, 341, 41))
        self.frame_auto_9.setStyleSheet(u"")
        self.frame_auto_9.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_9.setFrameShadow(QFrame.Raised)
        self.frame_auto_10 = QFrame(self.centralwidget)
        self.frame_auto_10.setObjectName(u"frame_auto_10")
        self.frame_auto_10.setGeometry(QRect(350, 720, 671, 41))
        self.frame_auto_10.setStyleSheet(u"")
        self.frame_auto_10.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_10.setFrameShadow(QFrame.Raised)
        self.frame_auto_8 = QFrame(self.centralwidget)
        self.frame_auto_8.setObjectName(u"frame_auto_8")
        self.frame_auto_8.setGeometry(QRect(680, 680, 341, 41))
        self.frame_auto_8.setStyleSheet(u"")
        self.frame_auto_8.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_8.setFrameShadow(QFrame.Raised)
        self.mdi_line = MDILine(self.frame_auto_8)
        self.mdi_line.setObjectName(u"mdi_line")
        self.mdi_line.setGeometry(QRect(60, 3, 279, 35))
        font = QFont()
        font.setPointSize(15)
        font.setBold(True)
        self.mdi_line.setFont(font)
        self.mdi_line.setProperty("soft_keyboard_option", True)
        self.label_11 = QLabel(self.frame_auto_8)
        self.label_11.setObjectName(u"label_11")
        self.label_11.setGeometry(QRect(0, 0, 61, 41))
        self.gcodes_label = StatusLabel(self.centralwidget)
        self.gcodes_label.setObjectName(u"gcodes_label")
        self.gcodes_label.setGeometry(QRect(370, 725, 651, 31))
        self.gcodes_label.setTextFormat(Qt.RichText)
        self.gcodes_label.setProperty("gcodes_status", True)
        self.gcodes_label.setProperty("mcodes_status", False)
        self.frame_auto_5 = QFrame(self.centralwidget)
        self.frame_auto_5.setObjectName(u"frame_auto_5")
        self.frame_auto_5.setGeometry(QRect(680, 460, 161, 221))
        self.frame_auto_5.setStyleSheet(u"")
        self.frame_auto_5.setFrameShape(QFrame.StyledPanel)
        self.frame_auto_5.setFrameShadow(QFrame.Raised)
        self.statuslabel = StatusLabel(self.frame_auto_5)
        self.statuslabel.setObjectName(u"statuslabel")
        self.statuslabel.setGeometry(QRect(10, 110, 141, 21))
        self.statuslabel.setProperty("gcodes_status", False)
        self.statuslabel.setProperty("tool_comment_status", True)
        self.StatusLabel = StatusLabel(self.centralwidget)
        self.StatusLabel.setObjectName(u"StatusLabel")
        self.StatusLabel.setGeometry(QRect(760, 530, 91, 31))
        self.StatusLabel.setProperty("tool_diameter_status", True)
        self.StatusLabel.setProperty("tool_number_status", False)
        self.state_label_10 = StatusLabel(self.centralwidget)
        self.state_label_10.setObjectName(u"state_label_10")
        self.state_label_10.setGeometry(QRect(410, 590, 251, 31))
        self.state_label_10.setTextFormat(Qt.RichText)
        self.state_label_10.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.state_label_10.setProperty("feed_override_status", False)
        self.state_label_10.setProperty("spindle_override_status", False)
        self.state_label_10.setProperty("requested_spindle_speed_status", False)
        self.state_label_10.setProperty("actual_spindle_speed_status", False)
        self.state_label_10.setProperty("actual_surface_speed_status", True)
        self.widgetswitcher = WidgetSwitcher(self.centralwidget)
        self.widgetswitcher.setObjectName(u"widgetswitcher")
        self.widgetswitcher.setGeometry(QRect(200, 4, 831, 461))
        self.page_0 = QWidget()
        self.page_0.setObjectName(u"page_0")
        self.verticalLayout_2 = QVBoxLayout(self.page_0)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout = QVBoxLayout()
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.horizontalLayout_3 = QHBoxLayout()
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.dro_frame = QFrame(self.page_0)
        self.dro_frame.setObjectName(u"dro_frame")
        self.dro_frame.setEnabled(True)
        self.dro_frame.setStyleSheet(u"")
        self.dro_frame.setFrameShape(QFrame.StyledPanel)
        self.dro_frame.setFrameShadow(QFrame.Raised)
        self.drolabel_10 = DROLabel(self.dro_frame)
        self.drolabel_10.setObjectName(u"drolabel_10")
        self.drolabel_10.setGeometry(QRect(80, 10, 291, 61))
        self.drolabel_10.setStyleSheet(u"color: rgb(255, 255, 255);\n"
"font: 75 48pt \"Noto Sans\";")
        self.drolabel_10.setFrameShape(QFrame.NoFrame)
        self.drolabel_10.setTextFormat(Qt.AutoText)
        self.drolabel_10.setProperty("Qreference_type", 1)
        self.drolabel_11 = DROLabel(self.dro_frame)
        self.drolabel_11.setObjectName(u"drolabel_11")
        self.drolabel_11.setGeometry(QRect(80, 70, 291, 61))
        self.drolabel_11.setStyleSheet(u"font: 75 48pt \"Noto Sans\";\n"
"color: rgb(255, 255, 255);")
        self.drolabel_11.setProperty("Qjoint_number", 1)
        self.drolabel_11.setProperty("Qreference_type", 1)
        self.drolabel_12 = DROLabel(self.dro_frame)
        self.drolabel_12.setObjectName(u"drolabel_12")
        self.drolabel_12.setGeometry(QRect(80, 130, 291, 61))
        self.drolabel_12.setStyleSheet(u"font: 75 48pt \"Noto Sans\";\n"
"color: rgb(255, 255, 255);")
        self.drolabel_12.setProperty("Qjoint_number", 2)
        self.drolabel_12.setProperty("Qreference_type", 1)
        self.label_30 = QLabel(self.dro_frame)
        self.label_30.setObjectName(u"label_30")
        self.label_30.setGeometry(QRect(10, 11, 72, 61))
        self.label_30.setStyleSheet(u"color: rgb(255, 255, 255);\n"
"font: 75 48pt \"Noto Sans\";")
        self.label_31 = QLabel(self.dro_frame)
        self.label_31.setObjectName(u"label_31")
        self.label_31.setGeometry(QRect(10, 70, 72, 61))
        self.label_31.setStyleSheet(u"color: rgb(255, 255, 255);\n"
"font: 75 48pt \"Noto Sans\";")
        self.label_32 = QLabel(self.dro_frame)
        self.label_32.setObjectName(u"label_32")
        self.label_32.setGeometry(QRect(10, 130, 72, 61))
        self.label_32.setStyleSheet(u"color: rgb(255, 255, 255);\n"
"font: 75 48pt \"Noto Sans\";")
        self.state_label_17 = StatusLabel(self.dro_frame)
        self.state_label_17.setObjectName(u"state_label_17")
        self.state_label_17.setGeometry(QRect(280, 190, 121, 31))
        self.state_label_17.setTextFormat(Qt.RichText)
        self.state_label_17.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.state_label_17.setProperty("feed_override_status", False)
        self.state_label_17.setProperty("spindle_override_status", False)
        self.state_label_17.setProperty("current_feedrate_status", True)
        self.StateLabel_7 = StateLabel(self.dro_frame)
        self.StateLabel_7.setObjectName(u"StateLabel_7")
        self.StateLabel_7.setGeometry(QRect(370, 40, 41, 22))
        self.StateLabel_8 = StateLabel(self.dro_frame)
        self.StateLabel_8.setObjectName(u"StateLabel_8")
        self.StateLabel_8.setGeometry(QRect(370, 10, 51, 22))
        self.StateLabel_8.setProperty("metric_mode_status", False)
        self.StateLabel_8.setProperty("diameter_mode_status", True)
        self.state_label_18 = StatusLabel(self.dro_frame)
        self.state_label_18.setObjectName(u"state_label_18")
        self.state_label_18.setGeometry(QRect(100, 190, 91, 31))
        self.state_label_18.setTextFormat(Qt.RichText)
        self.state_label_18.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.state_label_18.setProperty("feed_override_status", False)
        self.state_label_18.setProperty("spindle_override_status", False)
        self.state_label_18.setProperty("current_feedrate_status", False)
        self.state_label_18.setProperty("current_FPU_status", True)
        self.state_label_19 = StatusLabel(self.dro_frame)
        self.state_label_19.setObjectName(u"state_label_19")
        self.state_label_19.setGeometry(QRect(370, 70, 51, 21))
        self.state_label_19.setMidLineWidth(0)
        self.state_label_19.setTextFormat(Qt.RichText)
        self.state_label_19.setProperty("feed_override_status", False)
        self.state_label_19.setProperty("user_system_status", True)
        self.label_33 = QLabel(self.dro_frame)
        self.label_33.setObjectName(u"label_33")
        self.label_33.setGeometry(QRect(200, 190, 101, 31))
        self.label_33.setStyleSheet(u"color: rgb(255, 255, 255);\n"
"font: 75 18pt \"Noto Sans\";")
        self.label_33.setTextFormat(Qt.AutoText)
        self.statelabel_6 = StateLabel(self.dro_frame)
        self.statelabel_6.setObjectName(u"statelabel_6")
        self.statelabel_6.setEnabled(True)
        self.statelabel_6.setGeometry(QRect(10, 191, 81, 31))
        self.statelabel_6.setTextFormat(Qt.AutoText)

        self.horizontalLayout_3.addWidget(self.dro_frame)

        self.Graphics = GCodeGraphics(self.page_0)
        self.Graphics.setObjectName(u"Graphics")
        self.Graphics.setProperty("_dtg", False)

        self.horizontalLayout_3.addWidget(self.Graphics)


        self.verticalLayout.addLayout(self.horizontalLayout_3)

        self.gcodeeditor = GcodeEditor(self.page_0)
        self.gcodeeditor.setObjectName(u"gcodeeditor")
        self.gcodeeditor.setMinimumSize(QSize(200, 200))
        self.gcodeeditor.setProperty("auto_show_manual_status", True)

        self.verticalLayout.addWidget(self.gcodeeditor)


        self.verticalLayout_2.addLayout(self.verticalLayout)

        self.widgetswitcher.addWidget(self.page_0)
        self.page_1 = QWidget()
        self.page_1.setObjectName(u"page_1")
        self.verticalLayout_8 = QVBoxLayout(self.page_1)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.verticalLayout_7 = QVBoxLayout()
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")

        self.verticalLayout_8.addLayout(self.verticalLayout_7)

        self.widgetswitcher.addWidget(self.page_1)
        self.page_2 = QWidget()
        self.page_2.setObjectName(u"page_2")
        self.verticalLayout_4 = QVBoxLayout(self.page_2)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.verticalLayout_3 = QVBoxLayout()
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")

        self.verticalLayout_4.addLayout(self.verticalLayout_3)

        self.widgetswitcher.addWidget(self.page_2)
        self.page_3 = QWidget()
        self.page_3.setObjectName(u"page_3")
        self.verticalLayout_6 = QVBoxLayout(self.page_3)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.verticalLayout_5 = QVBoxLayout()
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")

        self.verticalLayout_6.addLayout(self.verticalLayout_5)

        self.widgetswitcher.addWidget(self.page_3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.widgetswitcher.raise_()
        self.frame_auto_5.raise_()
        self.state_label_4.raise_()
        self.StatusLabel.raise_()
        self.frame_auto_10.raise_()
        self.frame_auto_9.raise_()
        self.frame_auto_6.raise_()
        self.frame_auto_7.raise_()
        self.frame_auto_4.raise_()
        self.frame_auto_3.raise_()
        self.frame_auto_2.raise_()
        self.drolabel_y.raise_()
        self.drolabel_z.raise_()
        self.drolabel_x.raise_()
        self.state_enable_gridLayout.raise_()
        self.label_13.raise_()
        self.label_14.raise_()
        self.label_15.raise_()
        self.label_16.raise_()
        self.line.raise_()
        self.state_label.raise_()
        self.state_label_2.raise_()
        self.state_label_3.raise_()
        self.state_label_5.raise_()
        self.state_label_6.raise_()
        self.led_home_x.raise_()
        self.led_home_y.raise_()
        self.led_home_z.raise_()
        self.actionbutton_9.raise_()
        self.actionbutton_10.raise_()
        self.actionbutton_11.raise_()
        self.ScreenOptions.raise_()
        self.StatusLabel_2.raise_()
        self.StatusStacked.raise_()
        self.mcodes_label.raise_()
        self.frame_auto_8.raise_()
        self.gcodes_label.raise_()
        self.state_label_10.raise_()
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        self.statusbar.setSizeGripEnabled(True)
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(MainWindow.widget_switch)
        self.widgetswitcher.widgetChanged.connect(MainWindow.set_edit_mode)
        self.btn_toggle_continuous.clicked.connect(MainWindow.toggle_continuous_clicked)

        self.StatusStacked.setCurrentIndex(0)
        self.widgetswitcher.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.drolabel_z.setText(QCoreApplication.translate("MainWindow", u"   0.5217", None))
        self.drolabel_x.setText(QCoreApplication.translate("MainWindow", u"  -1.6994", None))
        self.actionbutton.setText(QCoreApplication.translate("MainWindow", u"Zero Z", None))
        self.actionbutton_2.setText(QCoreApplication.translate("MainWindow", u"Zero Y", None))
        self.actionbutton_3.setText(QCoreApplication.translate("MainWindow", u"Zero X", None))
        self.label_13.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" color:#d1d1d1;;\">Jog Rate</span></p></body></html>", None))
        self.label_14.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" color:#d1d1d1;\">Jog Inc</span></p></body></html>", None))
        self.label_15.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" color:#d1d1d1;\">Number</span></p></body></html>", None))
        self.label_16.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" color:#d1d1d1;\">Diameter</span></p></body></html>", None))
        self.state_label.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#d0d0d0;\">RO:</span><span style=\" font-size:18pt; font-weight:600; color:#ffff00;\">100%</span></p></body></html>", None))
        self.state_label.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#d0d0d0;\">RO:</span><span style=\" font-size:18pt; font-weight:600; color:#ffff00;\">%3.f%%</span></p></body></html>", None))
        self.state_label_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#d0d0d0;\">FO:</span><span style=\" font-size:18pt; font-weight:600; color:#ffff00;\">100%</span></p></body></html>", None))
        self.state_label_2.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#d0d0d0;\">FO:</span><span style=\" font-size:18pt; font-weight:600; color:#ffff00;\">%3.f%%</span></p></body></html>", None))
        self.state_label_3.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#d0d0d0;\">SO:</span><span style=\" font-size:18pt; font-weight:600; color:#ffff00;\">100%</span></p></body></html>", None))
        self.state_label_3.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#d0d0d0;\">SO:</span><span style=\" font-size:18pt; font-weight:600; color:#ffff00;\">%3.f%%</span></p></body></html>", None))
        self.state_label_4.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>   <span style=\" font-weight:600;font-size:18pt;  color:#ffff00;\">100</span></p></body></html>", None))
        self.state_label_4.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p>   <span style=\" font-weight:600;font-size:18pt;  color:#ffff00;\">%d</span></p></body></html>", None))
        self.state_label_5.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#ffff00;\">100</span></p></body></html>", None))
        self.state_label_5.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#ffff00;\">%2.f</span></p></body></html>", None))
        self.state_label_6.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:36pt; color:#ffff00;\">100</span><span style=\" font-size:36pt; color:#d1d1d1;\"> RPM</span></p></body></html>", None))
        self.state_label_6.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:36pt; color:#ffff00;\">%d</span><span style=\" font-size:36pt; color:#d1d1d1;\"> RPM</span></p></body></html>", None))
        self.actionbutton_9.setText(QCoreApplication.translate("MainWindow", u"Manual", None))
        self.actionbutton_9.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"True", None))
        self.actionbutton_9.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"False", None))
        self.actionbutton_9.setProperty("true_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"true command\"", None))
        self.actionbutton_9.setProperty("false_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"false command\"", None))
        self.actionbutton_9.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.actionbutton_9.setProperty("command_text_string", "")
        self.actionbutton_9.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"MAN  ", None))
        self.actionbutton_9.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.actionbutton_9.setProperty("richtext_string", QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'Times'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Man</span></p></body></html>", None))
        self.actionbutton_10.setText(QCoreApplication.translate("MainWindow", u"MDI", None))
        self.actionbutton_10.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"True", None))
        self.actionbutton_10.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"False", None))
        self.actionbutton_10.setProperty("true_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"true command\"", None))
        self.actionbutton_10.setProperty("false_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"false command\"", None))
        self.actionbutton_10.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.actionbutton_10.setProperty("command_text_string", "")
        self.actionbutton_10.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"MDI ", None))
        self.actionbutton_10.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.actionbutton_10.setProperty("richtext_string", QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'Times'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">MDI</span></p></body></html>", None))
        self.actionbutton_11.setText(QCoreApplication.translate("MainWindow", u"Auto", None))
        self.actionbutton_11.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"True", None))
        self.actionbutton_11.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"False", None))
        self.actionbutton_11.setProperty("true_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"true command\"", None))
        self.actionbutton_11.setProperty("false_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"false command\"", None))
        self.actionbutton_11.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.actionbutton_11.setProperty("command_text_string", "")
        self.actionbutton_11.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"Auto  ", None))
        self.actionbutton_11.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.actionbutton_11.setProperty("richtext_string", QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'Times'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Auto</span></p></body></html>", None))
        self.StatusLabel_2.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#ffff00;\">%s</span></p></body></html>", None))
        self.jog_pos_x.setText(QCoreApplication.translate("MainWindow", u"X+", None))
        self.jog_pos_x.setProperty("axis_letter", QCoreApplication.translate("MainWindow", u"X", None))
        self.jog_neg_x.setText(QCoreApplication.translate("MainWindow", u"X-", None))
        self.jog_neg_x.setProperty("axis_letter", QCoreApplication.translate("MainWindow", u"X", None))
        self.jog_pos_z.setText(QCoreApplication.translate("MainWindow", u"Z+", None))
        self.jog_pos_z.setProperty("axis_letter", QCoreApplication.translate("MainWindow", u"Z", None))
        self.jog_neg_z.setText(QCoreApplication.translate("MainWindow", u"Z-", None))
        self.jog_neg_z.setProperty("axis_letter", QCoreApplication.translate("MainWindow", u"Z", None))
        self.jog_neg_y.setText(QCoreApplication.translate("MainWindow", u"Y-", None))
        self.jog_neg_y.setProperty("axis_letter", QCoreApplication.translate("MainWindow", u"Y", None))
        self.jog_pos_y.setText(QCoreApplication.translate("MainWindow", u"Y+", None))
        self.jog_pos_y.setProperty("axis_letter", QCoreApplication.translate("MainWindow", u"Y", None))
        self.button_home.setText(QCoreApplication.translate("MainWindow", u"Unhomed", None))
        self.button_home.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"Homed", None))
        self.button_home.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"Unhomed", None))
        self.button_home.setProperty("checked_state_string", QCoreApplication.translate("MainWindow", u"Homed", None))
        self.button_home.setProperty("unchecked_state_string", QCoreApplication.translate("MainWindow", u"Unhomed", None))
        self.actionbutton_25.setText(QCoreApplication.translate("MainWindow", u"Fwd", None))
        self.actionbutton_26.setText(QCoreApplication.translate("MainWindow", u"Rev", None))
        self.actionbutton_27.setText(QCoreApplication.translate("MainWindow", u"+", None))
        self.actionbutton_28.setText(QCoreApplication.translate("MainWindow", u"-", None))
        self.actionbutton_29.setText(QCoreApplication.translate("MainWindow", u"Stop", None))
        self.actionbutton_14.setText(QCoreApplication.translate("MainWindow", u"offsets", None))
        self.actionbutton_13.setText(QCoreApplication.translate("MainWindow", u"Cam View", None))
        self.actionbutton_12.setText(QCoreApplication.translate("MainWindow", u"Macro", None))
        self.actionbutton_32.setText(QCoreApplication.translate("MainWindow", u"Go to\n"
"Origion Zero", None))
        self.actionbutton_32.setProperty("command_text_string", QCoreApplication.translate("MainWindow", u"MDI_COMMAND_LIST = 0", None))
        self.actionbutton_33.setText(QCoreApplication.translate("MainWindow", u"Go to\n"
" Machine Zero", None))
        self.actionbutton_33.setProperty("command_text_string", QCoreApplication.translate("MainWindow", u"G53 G0 X0Y0Z0", None))
        self.actionbutton_38.setText(QCoreApplication.translate("MainWindow", u"Zero G5x", None))
        self.actionbutton_72.setText(QCoreApplication.translate("MainWindow", u"Zero G92", None))
        self.actionbutton_load.setText(QCoreApplication.translate("MainWindow", u"load\n"
"file", None))
        self.actionbutton_4.setText(QCoreApplication.translate("MainWindow", u"Run", None))
        self.actionbutton_19.setText(QCoreApplication.translate("MainWindow", u"View P", None))
        self.actionbutton_20.setText(QCoreApplication.translate("MainWindow", u"View Z", None))
        self.actionbutton_20.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"z", None))
        self.actionbutton_21.setText(QCoreApplication.translate("MainWindow", u"View Y", None))
        self.actionbutton_21.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"y", None))
        self.actionbutton_22.setText(QCoreApplication.translate("MainWindow", u"View X", None))
        self.actionbutton_22.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"x", None))
        self.actionbutton_23.setText(QCoreApplication.translate("MainWindow", u"View Y2", None))
        self.actionbutton_23.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"y2", None))
        self.actionbutton_24.setText(QCoreApplication.translate("MainWindow", u"View Z2", None))
        self.actionbutton_24.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"z2", None))
        self.actionbutton_15.setText(QCoreApplication.translate("MainWindow", u"<- pan", None))
        self.actionbutton_15.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"pan-left", None))
        self.actionbutton_15.setProperty("command_text_string", "")
        self.actionbutton_16.setText(QCoreApplication.translate("MainWindow", u"pan ->", None))
        self.actionbutton_16.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"pan-right", None))
        self.actionbutton_16.setProperty("command_text_string", "")
        self.Roundbutton.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"zoom-in", None))
        self.Roundbutton.setProperty("command_text_string", "")
        self.Roundbutton_2.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"zoom-out", None))
        self.Roundbutton_2.setProperty("command_text_string", "")
        self.actionbutton_17.setText(QCoreApplication.translate("MainWindow", u"rot-u", None))
        self.actionbutton_17.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"rotate-up", None))
        self.actionbutton_17.setProperty("command_text_string", "")
        self.actionbutton_18.setText(QCoreApplication.translate("MainWindow", u"rot-d", None))
        self.actionbutton_18.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"rotate-down", None))
        self.actionbutton_18.setProperty("command_text_string", "")
        self.actionbutton_34.setText(QCoreApplication.translate("MainWindow", u"rot-cw", None))
        self.actionbutton_34.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"rotate-cw", None))
        self.actionbutton_34.setProperty("command_text_string", "")
        self.actionbutton_35.setText(QCoreApplication.translate("MainWindow", u"rot -ccw", None))
        self.actionbutton_35.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"rotate-ccw", None))
        self.actionbutton_35.setProperty("command_text_string", "")
        self.actionbutton_36.setText(QCoreApplication.translate("MainWindow", u"pan-u", None))
        self.actionbutton_36.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"pan-up", None))
        self.actionbutton_36.setProperty("command_text_string", "")
        self.actionbutton_37.setText(QCoreApplication.translate("MainWindow", u"pan-d", None))
        self.actionbutton_37.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"pan-down", None))
        self.actionbutton_37.setProperty("command_text_string", "")
        self.actionbutton_39.setText(QCoreApplication.translate("MainWindow", u"Step", None))
        self.actionbutton_39.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.actionbutton_39.setProperty("command_text_string", "")
        self.actionbutton_39.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"%1.3f in", None))
        self.actionbutton_39.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.mcodes_label.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:16pt; color:#ffff00;\">Mcodes: </span><span style=\" color:#ffff00;\">100.0</span></p></body></html>", None))
        self.mcodes_label.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:16pt; color:#ffff00;\">Mcodes: </span><span style=\" color:#ffff00;\">%s</span></p></body></html>", None))
        self.actionbutton_override_limits.setText(QCoreApplication.translate("MainWindow", u"Override Limits ", None))
        self.button_estop.setText(QCoreApplication.translate("MainWindow", u"Eclear", None))
        self.button_estop.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"Estop!", None))
        self.button_estop.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"Eclear", None))
        self.button_estop.setProperty("true_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"true command\"", None))
        self.button_estop.setProperty("false_python_cmd_string", QCoreApplication.translate("MainWindow", u"print\"false command\"", None))
        self.button_estop.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.button_estop.setProperty("command_text_string", "")
        self.button_estop.setProperty("textTemplate", "")
        self.button_estop.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.button_estop.setProperty("checked_state_string", QCoreApplication.translate("MainWindow", u"Estop!", None))
        self.button_estop.setProperty("unchecked_state_string", QCoreApplication.translate("MainWindow", u"Eclear", None))
        self.button_machineon.setText(QCoreApplication.translate("MainWindow", u"Off", None))
        self.button_machineon.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"On", None))
        self.button_machineon.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"Off", None))
        self.button_machineon.setProperty("true_python_cmd_string", QCoreApplication.translate("MainWindow", u"INSTANCE.test_function('MACHINE ON')", None))
        self.button_machineon.setProperty("false_python_cmd_string", QCoreApplication.translate("MainWindow", u"print ('MACHINE OFF')", None))
        self.button_machineon.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.button_machineon.setProperty("command_text_string", "")
        self.button_machineon.setProperty("textTemplate", "")
        self.button_machineon.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.button_machineon.setProperty("checked_state_string", QCoreApplication.translate("MainWindow", u"On", None))
        self.button_machineon.setProperty("unchecked_state_string", QCoreApplication.translate("MainWindow", u"Off", None))
        self.actionbutton_flood.setText(QCoreApplication.translate("MainWindow", u"Flood", None))
        self.actionbutton_mist.setText(QCoreApplication.translate("MainWindow", u"Mist", None))
        self.actionbutton_block_delete.setText(QCoreApplication.translate("MainWindow", u"Block Delete", None))
        self.actionbutton_optional_stop.setText(QCoreApplication.translate("MainWindow", u"Optional Stop", None))
        self.actionbutton_6.setText(QCoreApplication.translate("MainWindow", u"Abort", None))
        self.actionbutton_5.setText(QCoreApplication.translate("MainWindow", u"Pause\n"
"Motion", None))
        self.actionbutton_5.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"Paused", None))
        self.actionbutton_5.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"Pause\n"
"Motion", None))
        self.actionbutton_5.setProperty("checked_state_string", QCoreApplication.translate("MainWindow", u"Paused", None))
        self.actionbutton_5.setProperty("unchecked_state_string", QCoreApplication.translate("MainWindow", u"Pause", None))
        self.pushButton.setText(QCoreApplication.translate("MainWindow", u"Big\n"
"View", None))
        self.statuslabel_3.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#f6f80a;\">100.0</span></p></body></html>", None))
        self.statuslabel_3.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#f6f80a;\">%s</span></p></body></html>", None))
        self.label_17.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" color:#d1d1d1;\">Intepeter State:</span></p></body></html>", None))
        self.statuslabel_2.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"%a %d %H:%M %S", None))
        self.actionbutton_7.setText(QCoreApplication.translate("MainWindow", u"Fine", None))
        self.actionbutton_8.setText(QCoreApplication.translate("MainWindow", u"Med", None))
        self.actionbutton_30.setText(QCoreApplication.translate("MainWindow", u"Large", None))
        self.btn_toggle_continuous.setText(QCoreApplication.translate("MainWindow", u"Incremental", None))
        self.btn_toggle_continuous.setProperty("true_state_string", QCoreApplication.translate("MainWindow", u"Continuous", None))
        self.btn_toggle_continuous.setProperty("false_state_string", QCoreApplication.translate("MainWindow", u"Incremental", None))
        self.btn_toggle_continuous.setProperty("true_python_cmd_string", QCoreApplication.translate("MainWindow", u"INSTANCE.toggle_continuous_clicked(1)", None))
        self.btn_toggle_continuous.setProperty("false_python_cmd_string", QCoreApplication.translate("MainWindow", u"INSTANCE.toggle_continuous_clicked(0)", None))
        self.btn_toggle_continuous.setProperty("view_type_string", QCoreApplication.translate("MainWindow", u"P", None))
        self.btn_toggle_continuous.setProperty("command_text_string", "")
        self.btn_toggle_continuous.setProperty("textTemplate", "")
        self.btn_toggle_continuous.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"%1.2f mm", None))
        self.statusadjustmentbar.setProperty("text_template", QCoreApplication.translate("MainWindow", u"Jog Rate", None))
        self.statusadjustmentbar_2.setProperty("text_template", QCoreApplication.translate("MainWindow", u"Spindle", None))
        self.statusadjustmentbar_3.setProperty("text_template", QCoreApplication.translate("MainWindow", u"Feed", None))
        self.statusadjustmentbar_4.setProperty("text_template", QCoreApplication.translate("MainWindow", u"Rapid", None))
        self.mdi_line.setText("")
        self.label_11.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:16pt; color:#ffff00;\">MDI:</span></p></body></html>", None))
        self.gcodes_label.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:16pt; color:#ffff00;\">Gcodes: </span><span style=\" color:#ffff00;\">100.0</span></p></body></html>", None))
        self.gcodes_label.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:16pt; color:#ffff00;\">Gcodes: </span><span style=\" color:#ffff00;\">%s</span></p></body></html>", None))
        self.statuslabel.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" color:#d1d1d1;\">%s</span></p></body></html>", None))
        self.StatusLabel.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>   <span style=\" font-weight:600;font-size:18pt;  color:#ffff00;\">100.000</span></p></body></html>", None))
        self.StatusLabel.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p>   <span style=\" font-weight:600;font-size:18pt;  color:#ffff00;\">%3.3f</span></p></body></html>", None))
        self.state_label_10.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#ffff00;\">200.00</span><span style=\" font-size:18pt; color:#d1d1d1;\"> SFPM</span></p></body></html>", None))
        self.state_label_10.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#ffff00;\">%.2f</span><span style=\" font-size:18pt; color:#d1d1d1;\"> SFPM</span></p></body></html>", None))
        self.state_label_10.setProperty("alt_textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#ffff00;\">%.2f</span><span style=\" font-size:18pt; color:#d1d1d1;\"> SMPM</span></p></body></html>", None))
        self.widgetswitcher.setProperty("widget_list", QStringList()
            << QCoreApplication.translate("MainWindow", u"Graphics", None)
            << QCoreApplication.translate("MainWindow", u"gcodeeditor", None)
            << QCoreApplication.translate("MainWindow", u"dro_frame", None))
        self.label_30.setText(QCoreApplication.translate("MainWindow", u"X", None))
        self.label_31.setText(QCoreApplication.translate("MainWindow", u"Y", None))
        self.label_32.setText(QCoreApplication.translate("MainWindow", u"Z", None))
        self.state_label_17.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>  <span style=\" font-weight:600; font-size:18pt; color:#ffff00;\">100.0</span></p></body></html>", None))
        self.state_label_17.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p>  <span style=\" font-weight:600; font-size:18pt; color:#ffff00;\">%3.1f</span></p></body></html>", None))
        self.StateLabel_7.setText("")
        self.StateLabel_7.setProperty("true_textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#ffff00;\">MM</span></p></body></html>", None))
        self.StateLabel_7.setProperty("false_textTemplate", "")
        self.StateLabel_8.setText("")
        self.StateLabel_8.setProperty("true_textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#ffff00;\">DIAM</span></p></body></html>", None))
        self.StateLabel_8.setProperty("false_textTemplate", "")
        self.state_label_18.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>  <span style=\" font-weight:600; font-size:18pt; color:#ffff00;\">100.000</span></p></body></html>", None))
        self.state_label_18.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p>  <span style=\" font-weight:600; font-size:18pt; color:#ffff00;\">%3.3f</span></p></body></html>", None))
        self.state_label_19.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#ffff00;\">G100.0</span></p></body></html>", None))
        self.state_label_19.setProperty("textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600; color:#ffff00;\">G%s</span></p></body></html>", None))
        self.label_33.setText(QCoreApplication.translate("MainWindow", u"Velocity:", None))
        self.statelabel_6.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#fffffd;\">IPR:</span></p></body></html>", None))
        self.statelabel_6.setProperty("true_textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#fffffd;\">mmPR:</span></p></body></html>", None))
        self.statelabel_6.setProperty("false_textTemplate", QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:18pt; color:#fffffd;\">IPR:</span></p></body></html>", None))
    # retranslateUi

